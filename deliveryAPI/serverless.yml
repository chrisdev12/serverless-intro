service: mentoryAPI
frameworkVersion: "3"

plugins:
  - serverless-lift
  - serverless-offline

package:
  individually: true
  patterns:
    - "!node_modules/*"
    - package.json

custom:
  serverless-offline:
    httpPort: 4000
  tableName: "delivery-orders-table-${sls:stage}"

layers:
  DeliveryApiCommon:
    path: ./lambda_layer # required, path to layer contents on disk
    name: ${sls:stage}-sharedLambdaLayer # optional, Deployed Lambda layer name
    description: General DeliveryAPI lambda layer # optional, Description to publish to AWS
    compatibleRuntimes: # optional, a list of runtimes this layer is compatible with
      - nodejs14.x

provider:
  name: aws
  runtime: nodejs14.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [DeliveryAPIOrdersTable, Arn]
  environment:
    ORDERS_TABLE: ${self:custom.tableName}
  layers:
    - !Ref DeliveryApiCommonLambdaLayer

constructs:
  jobs:
    type: queue
    worker:
      handler: orderSubscription.handler
      package:
        patterns:
          - orderSqsSubscriptor/

functions:
  GetOrderById:
    handler: orderHandler/getOrder.handler
    events:
      - httpApi:
          path: /order/{orderId}
          method: get
    package:
      patterns:
        - orderHandler/
  PostOrder:
    handler: orderHandler/initOrder.handler
    events:
      - httpApi:
          path: /order
          method: post
    environment:
      QUEUE_URL: ${construct:jobs.queueUrl}
    package:
      patterns:
        - orderHandler/

resources:
  Resources:
    DeliveryAPIOrdersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: orderId
            AttributeType: S
        KeySchema:
          - AttributeName: orderId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableName}
